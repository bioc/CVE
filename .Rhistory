#' @docType data
#' @keywords datasets
#' @name MS_lscore
NULL
#' Primary vs metastasis module significance (MS)
#'
#' A dataset containing the primary vs metastases module signficance for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name MS_pmet
NULL
#' Survival module significance (MS)
#'
#' A dataset containing the survival module signficance for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name MS_survival
NULL
#' Vemurafenib resistance module significance (MS)
#'
#' A dataset containing the vemurafenib resistance module signficance for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name MS_vem
NULL
#' UV signature module significance scaled for barplot
#'
#' A dataset containing the UV signature module signficance scaled for barplot for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name MS_UV_bar
NULL
#' Lymphocyte score module significance scaled for barplot
#'
#' A dataset containing the lymphocyte score module signficance scaled for barplot for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name MS_lscore_bar
NULL
#' Primary vs metastasis module significance scaled for barplot
#'
#' A dataset containing the primary vs metastases module signficance scaled for barplot for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name MS_pmet_bar
NULL
#' Survival module significance scaled for barplot
#'
#' A dataset containing the survival module signficance scaled for barplot for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name MS_survival_bar
NULL
#' Vemurafenib resistance module significance scaled for barplot
#'
#' A dataset containing the vemurafenib resistance module signficance scaled for barplot for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name MS_Vem_bar
NULL
#' Top 5000 most variant genes in TCGA RNAseq data
#'
#' A dataset containing the top 5000 most variant genes in TCGA RNAseq data for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name genes_WGCNA
NULL
#' Module assignment of top 5000 most variant genes in TCGA RNAseq data
#'
#' A dataset containing the module assignment top 5000 most variant genes in TCGA RNAseq data for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name modules
NULL
#' Label order of co-expression modules
#'
#' A dataset containing the label order of co-expression modules for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name label_order
NULL
openCVE(melanomaCase, extension="WGCNAmelanoma")
library(CVE)
#' Open Cancer Variant Explorer (CVE) Shiny app
#'
#' @description The openCVE function opens the CVE Shiny app.
#' The function to supplement the R package with the Shiny app was suggested by Dean Attali (http://deanattali.com). Currently, the only extension available is a melanoma co-expression network (WGCNAmelanoma).
#' @param x A dataframe (for single file) or list (for multiple oncotator output files)
#' @param sample_names A character vector with sample name(s)
#' @param extension A character vector of extention name
#' @importFrom shiny runApp
#' @import ConsensusClusterPlus RColorBrewer gplots plyr
#' @import ggplot2 jsonlite ape WGCNA
#' @examples
#' \donttest{
#' openCVE(crcCase,"case study")
#' openCVE(melanomaCase,"case study WGCNA",extension="WGCNAmelanoma")
#' }
#' @export
openCVE <- function(x, sample_names=NULL, extension=FALSE) {
#set app directory
if(extension=="WGCNAmelanoma"){
appDir <-system.file("Shiny","CVE_WGCNA_melanoma",package="CVE")
} else {
appDir <- system.file("Shiny", "CVE", package = "CVE")
}
if (appDir == "") {
stop("Could not find example directory. Try re-installing `CVE`.", call. = FALSE)
}
if(is.null(sample_names)){
sample_names = "sample"
}
#if data frame -> turn into list
if(class(x)=="data.frame"){
z = vector("list",1)
z[[1]] = x
names(z) = sample_names
assign("v",z,.GlobalEnv)
} else if (class(x)=="list"){
z = x
names(z) = sample_names
assign("v",z,.GlobalEnv)
} else {
stop("x is neither a data frame nor list. Please change format accordingly.")
}
runApp(appDir, display.mode = "normal")
}
####################
#Data set documentation
####################
#' Example Oncotator output for the melanoma cohort study described in the paper
#'
#' An Oncotator MAF file
#'
#'
#' @docType data
#' @keywords datasets
#' @name melanomaCase
NULL
#' Example Oncotator output for the single-patient colorectal cancer sample
#'
#' An Oncotator MAF file
#'
#'
#' @docType data
#' @keywords datasets
#' @name crcCase
NULL
#' UV signature gene significance (GS)
#'
#' A dataset containing the UV signature gene signficance for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name GS_UV
NULL
#' Lymphocyte score gene significance (GS)
#'
#' A dataset containing the lymphocyte score gene signficance for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name GS_lscore
NULL
#' Primary vs metastasis gene significance (GS)
#'
#' A dataset containing the primary vs metastases gene signficance for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name GS_pmet
NULL
#' Survival gene significance (GS)
#'
#' A dataset containing the survival gene signficance for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name GS_survival
NULL
#' Vemurafenib resistance gene significance (GS)
#'
#' A dataset containing the vemurafenib resistance gene signficance for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name GS_Vem
NULL
#' Gene tree of co-expression network
#'
#' A dataset containing the gene tree of co-expression network for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name METree_GO
NULL
#' Module membership
#'
#' A dataset containing the module membership for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name MM
NULL
#' UV signature module significance (MS)
#'
#' A dataset containing the UV signature module signficance for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name MS_UV
NULL
#' Lymphocyte score module significance (MS)
#'
#' A dataset containing the lymphocyte score module signficance for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name MS_lscore
NULL
#' Primary vs metastasis module significance (MS)
#'
#' A dataset containing the primary vs metastases module signficance for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name MS_pmet
NULL
#' Survival module significance (MS)
#'
#' A dataset containing the survival module signficance for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name MS_survival
NULL
#' Vemurafenib resistance module significance (MS)
#'
#' A dataset containing the vemurafenib resistance module signficance for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name MS_vem
NULL
#' UV signature module significance scaled for barplot
#'
#' A dataset containing the UV signature module signficance scaled for barplot for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name MS_UV_bar
NULL
#' Lymphocyte score module significance scaled for barplot
#'
#' A dataset containing the lymphocyte score module signficance scaled for barplot for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name MS_lscore_bar
NULL
#' Primary vs metastasis module significance scaled for barplot
#'
#' A dataset containing the primary vs metastases module signficance scaled for barplot for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name MS_pmet_bar
NULL
#' Survival module significance scaled for barplot
#'
#' A dataset containing the survival module signficance scaled for barplot for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name MS_survival_bar
NULL
#' Vemurafenib resistance module significance scaled for barplot
#'
#' A dataset containing the vemurafenib resistance module signficance scaled for barplot for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name MS_Vem_bar
NULL
#' Top 5000 most variant genes in TCGA RNAseq data
#'
#' A dataset containing the top 5000 most variant genes in TCGA RNAseq data for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name genes_WGCNA
NULL
#' Module assignment of top 5000 most variant genes in TCGA RNAseq data
#'
#' A dataset containing the module assignment top 5000 most variant genes in TCGA RNAseq data for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name modules
NULL
#' Label order of co-expression modules
#'
#' A dataset containing the label order of co-expression modules for WGCNAmelanoma extension
#'
#'
#' @docType data
#' @keywords datasets
#' @name label_order
NULL
openCVE(melanomaCase, extension="WGCNAmelanoma")
openCVE(melanomaCase, extension="WGCNAmelanoma")
openCVE <- function(x, sample_names=NULL, extension=FALSE) {
#set app directory
if(extension=="WGCNAmelanoma"){
appDir <-system.file("Shiny","CVE_WGCNA_melanoma",package="CVE")
} else {
appDir <- system.file("Shiny", "CVE", package = "CVE")
}
if (appDir == "") {
stop("Could not find example directory. Try re-installing `CVE`.", call. = FALSE)
}
if(is.null(sample_names)){
sample_names = "sample"
}
#if data frame -> turn into list
if(class(x)=="data.frame"){
z = vector("list",1)
z[[1]] = x
names(z) = sample_names
assign("v",z,.GlobalEnv)
} else if (class(x)=="list"){
z = x
names(z) = sample_names
assign("v",z,.GlobalEnv)
} else {
stop("x is neither a data frame nor list. Please change format accordingly.")
}
shiny::runApp(appDir, display.mode = "normal")
}
openCVE(melanomaCase, extension="WGCNAmelanoma")
load("~/Documents/Research/crcCase_dev.RData")
openCVE(crcCase_dev)
library(CVE)
openCVE(crcCase)
library(CVE)
openCVE(crcCase)
library(CVE)
library(CVE)
openCVE(crcCase)
library(CVE)
openCVE(crcCase)
library(CVE)
openCVE(crcCase)
library(CVE)
openCVE(crcCase)
library(CVE)
openCVE(crcCase)
??heatmap.2
library(CVE)
openCVE()
openCVE(crcCase)
library(CVE)
openCVE(crcCase)
openCVE(melanomaCase)
library(RTCGAToolbox)
crcData <- getFirehoseData(dataset="COAD",
clinical=TRUE,
Mutation=TRUE,
runDate="20160128")
mutData <- selectType(crcData, "Mutation")
crcCase_Firehouse <- mutData[mutData[["Tumor_Sample_Barcode"]] ==
"TCGA-AA-A00N-01A-02W-A00E-09",]
crcCase_input = data.frame(chr=crcCase_Firehouse$Chromosome,
start=crcCase_Firehouse$Start_position,
end=crcCase_Firehouse$End_position,
reference_allele=crcCase_Firehouse$Reference_Allele,
observed_allele=crcCase_Firehouse$Tumor_Seq_Allele2)
head(crcCase_input)
library(jsonlite)
crcCase <- get.oncotator.anno(crcCase_input)
crcCase <- get.oncotator.anno(crcCase_input)
library(RTCGAToolbox)
crcData <- getFirehoseData(dataset="COAD",
clinical=TRUE,
Mutation=TRUE,
runDate="20160128")
mutData <- selectType(crcData, "Mutation")
crcCase_Firehouse <- mutData[mutData[["Tumor_Sample_Barcode"]] ==
"TCGA-AA-A00N-01A-02W-A00E-09",]
crcCase_input = data.frame(chr=crcCase_Firehouse$Chromosome,
start=crcCase_Firehouse$Start_position,
end=crcCase_Firehouse$End_position,
reference_allele=crcCase_Firehouse$Reference_Allele,
observed_allele=crcCase_Firehouse$Tumor_Seq_Allele2)
head(crcCase_input)
library(jsonlite)
crcCase <- get.oncotator.anno(crcCase_input)
crcCase_new = crcCase
save(crcCase_new,file="~/Documents/Research/devs/data/crcCase_new.RData")
load("~/Documents/Research/devs/data/crcCase.RData")
load("~/Documents/Research/devs/data/crcCase_new.RData")
cbind(colnames(crcCase,crcCase_new))
cbind(colnames(crcCase),colnames(crcCase_new))
openCVE(crcCase_new)
openCVE(crcCase)
head(crcCase)
head(crcCase_new)
openCVE(crcCase_new)
cbind(colnames(crcCase),colnames(crcCase_new))
all.equal(crcCase,crcCase_new)
str(crcCase)
class(crcCase)
class(crcCase_new)
load("~/Documents/Research/devs/data/crcCase.RData")
library(CVE)
openCVE(crcCase)
openCVE(crcCase_new)
load("~/Documents/Research/devs/data/crcCase_new.RData")
openCVE(crcCase_new)
head(crcCase)
colnames(crcCase)
cbind(colnames(crcCase),colnames(crcCase_new))
all.equal(colnames(crcCase),colnames(crcCase_new))
crcCase$gene
crcCase_new$gene
unlist(crcCase_new$gene)
test <- apply(crcCase_new,2,unlist)
test
head(est)
hest(test)
head(test)
load("~/Documents/Research/devs/data/crcCase_new.RData")
test <- tibble(crcCase_new)
library(tidyverse)
test <- tibble(crcCase_new)
str(crcCase_new)
test <- apply(crcCase_new,2,unlist)
test <- apply(crcCase_new,2,as.factor)
test <- apply(test,2,as.factor)
openCVE(test)
class(test)
test <- as.data.frame(test)
class(test)
openCVE(test)
all.equal(test,crcCae)
all.equal(test,crcCase)
library(tidyverse)
library(CVE)
source('http://www.bioconductor.org/biocLite.R')
library(CVE)
library(RTCGAToolbox)
crcData <- getFirehoseData(dataset="COAD",
clinical=TRUE,
Mutation=TRUE,
runDate="20160128")
crcData <- getFirehoseData(dataset="COAD",
clinical=TRUE,
Mutation=TRUE,
runDate="20160128")
mutData <- selectType(crcData, "Mutation")
crcCase_Firehouse <- mutData[mutData[["Tumor_Sample_Barcode"]] ==
"TCGA-AA-A00N-01A-02W-A00E-09",]
crcCase_input = data.frame(chr=crcCase_Firehouse$Chromosome,
start=crcCase_Firehouse$Start_position,
end=crcCase_Firehouse$End_position,
reference_allele=crcCase_Firehouse$Reference_Allele,
observed_allele=crcCase_Firehouse$Tumor_Seq_Allele2)
head(crcCase_input)
library(jsonlite)
crcCase <- get.oncotator.anno(crcCase_input)
openCVE(crcCase)
